
use package core

Canvas :: struct {
    Handle :: #type u32;

    init  :: (id: str) -> Handle #foreign "canvas" "init" ---
    clear :: (handle: Handle, r: f32, g: f32, b: f32, a := 1.0f) -> Handle #foreign "canvas" "clear" ---
    get_width  :: (handle: Handle) -> u32 #foreign "canvas" "get_width" ---
    get_height :: (handle: Handle) -> u32 #foreign "canvas" "get_height" ---
    fill_rect :: (handle: Handle,
        x: f32, y: f32, w: f32, h: f32,
        r: f32, g: f32, b: f32, a := 1.0f) -> void #foreign "canvas" "fillRect" ---
}

setup_canvas :: () {
    use Canvas;

    canvas := init("prez_canvas");
    if canvas == -1 {
        println("Failed to set up canvas.");
        return;
    }

    clear(canvas, 0.1, 0.1, 0.1);

    width, height := cast(f32) get_width(canvas), cast(f32) get_height(canvas);
    fill_rect(canvas, width / 2, height / 2, width / 2, height / 2, 1, 0, 0);
}

main :: (args: [] cstr) {
    setup_canvas();
}
